% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zillow-copy.R, R/zillow.R
\name{get_from_db_state_county}
\alias{get_from_db_state_county}
\title{get_from_db_state_county}
\usage{
get_from_db_state_county(state_county, columns = "*",
  database_name = "zillow_2017_nov", host_ip = "141.142.209.139",
  append = TRUE)

get_from_db_state_county(state_county, columns = "*",
  database_name = "zillow_2017_nov", host_ip = "141.142.209.139",
  append = TRUE)
}
\arguments{
\item{state_county}{A data.frame with two columns representing state and county name}

\item{columns}{A vector of column names to export. Default to all columns (i.e. "*").}

\item{database_name}{A string indicating the database name}

\item{host_ip}{A string indicating the ip address of the database VM}

\item{append}{If append is true, return a single data.frame with rows appended, otherwise a
list of data.frames from each state.}

\item{state_county}{A data.frame with two columns representing state and county name}

\item{columns}{A vector of column names to export. Default to all columns (i.e. "*").}

\item{database_name}{A string indicating the database name}

\item{host_ip}{A string indicating the ip address of the database VM}

\item{append}{If append is true, return a single data.frame with rows appended, otherwise a
list of data.frames from each state.}
}
\value{
A data.frame including all data from the given state and county

A data.frame including all data from the given state and county
}
\description{
This function gets a data.frame including all data from the given state abbr. and county.

This function gets a data.frame including all data from the given state abbr. and county.
}
\examples{
# First we need to get a data.frame as input to the get_from_db_state_county function.
# The following returns a data.frame with columns representing state and county
table <- get_state_county_by_fips("01001")[, c("state","county")]
# Next we feed it into the function to get hedonics data
data <- get_from_db_state_county(table)
# First we need to get a data.frame as input to the get_from_db_state_county function.
# The following returns a data.frame with columns representing state and county
table <- get_state_county_by_fips("01001")[, c("state","county")]
# Next we feed it into the function to get hedonics data
data <- get_from_db_state_county(table)
}
